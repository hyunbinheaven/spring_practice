<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 1. jdbc.properties 등록 -->
	<context:property-placeholder location="classpath:com/config/jdbc.properties"/>
	
	<!-- 2. DBCP 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
	  <property name="driverClassName" value="${jdbc.driver}"/>
	  <property name="url" value="${jdbc.url}"/>
	  <property name="username" value="${jdbc.username}"/>
	  <property name="password" value="${jdbc.password}"/>	  	  
	</bean>

	<!-- 3. SqlSessionFactoryBean 등록 (이전 Mybatis의 SqlSessionFactory 역할) -->
	<!-- Mapper 등록, DTO 별칭 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource"/>
	  <property name="mapperLocations">
	    <list>
	      <value>classpath:com/config/DeptMapper.xml</value>
	    </list>
	  </property>
	  <property name="typeAliases">
	    <list>
	      <value>com.dto.DeptDTO</value>
	    </list>
	  </property>
	</bean>

	<!-- 4. SqlSessionTemplate 등록 (이전 Mybatis의 SqlSession 역할) -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 5. DAO 에서 SqlSessionTemplate 주입 받아서 사용 -->
	<!-- DAO, Service 빈으로 등록 -->
	<context:component-scan base-package="com.*"/>
	
	
</beans>
